/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mvhsbandinventory;

/**
 *
 * @author nicholson
 */
public class Display extends javax.swing.JPanel implements java.beans.Customizer
{

    private Object bean;

    /** Creates new customizer DispTest */
    public Display()
    {
        initComponents();
        //set textbox sizes
        instruBox.setColumns(10);
        brandBox.setColumns(10);
        serialBox.setColumns(10);
        renterBox.setColumns(25);
        schoolyearBox.setColumns(25);
        dateoutBox.setColumns(25);

        //TODO: remove crappy test code.
        instruBox.setText("Flute");
        brandBox.setText("Yamaha");
        serialBox.setText("4B212A");
        rankBox.setText("2");
        valueBox.setText("250.49");
        strapCombo.setSelectedIndex(3);
        ligCombo.setSelectedIndex(3);
        mpieceCombo.setSelectedIndex(1);
        capCombo.setSelectedIndex(2);
        bowCombo.setSelectedIndex(3);
        notesTPane.setText("It's shiny, like a flute, but it's slightly flat.");
        
    }

    public void setObject(Object bean)
    {
        this.bean = bean;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        overlord = new javax.swing.JSplitPane();
        rightsplitPanel = new javax.swing.JPanel();
        infoTabs = new javax.swing.JTabbedPane();
        detailPanel = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        statusCombo = new javax.swing.JComboBox();
        instrumentLabel = new javax.swing.JLabel();
        instruBox = new javax.swing.JTextField();
        brandLabel = new javax.swing.JLabel();
        brandBox = new javax.swing.JTextField();
        serialLabel = new javax.swing.JLabel();
        serialBox = new javax.swing.JTextField();
        rankLabel = new javax.swing.JLabel();
        rankBox = new javax.swing.JTextField();
        valueLabel = new javax.swing.JLabel();
        valueBox = new javax.swing.JTextField();
        strapLabel = new javax.swing.JLabel();
        strapCombo = new javax.swing.JComboBox();
        ligatureLabel = new javax.swing.JLabel();
        ligCombo = new javax.swing.JComboBox();
        mpieceLabel = new javax.swing.JLabel();
        mpieceCombo = new javax.swing.JComboBox();
        capLabel = new javax.swing.JLabel();
        capCombo = new javax.swing.JComboBox();
        bowLabel = new javax.swing.JLabel();
        bowCombo = new javax.swing.JComboBox();
        noteLabel = new javax.swing.JLabel();
        detailNotePanel = new javax.swing.JScrollPane();
        notesTPane = new javax.swing.JTextPane();
        historyPanel = new javax.swing.JPanel();
        historySplit = new javax.swing.JSplitPane();
        historyTablePanel = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        checkoutPanel = new javax.swing.JPanel();
        renterLabel = new javax.swing.JLabel();
        renterBox = new javax.swing.JTextField();
        schoolyearLabel = new javax.swing.JLabel();
        schoolyearBox = new javax.swing.JTextField();
        dateoutLabel = new javax.swing.JLabel();
        dateoutBox = new javax.swing.JTextField();
        feeLabel = new javax.swing.JLabel();
        feeCombo = new javax.swing.JComboBox();
        periodLabel = new javax.swing.JLabel();
        periodCombo = new javax.swing.JComboBox();
        otherLabel = new javax.swing.JLabel();
        otherBox = new javax.swing.JTextField();
        checkoutButtonPanel = new javax.swing.JPanel();
        formButton = new javax.swing.JButton();
        outButton = new javax.swing.JButton();
        inButton = new javax.swing.JButton();
        lostButton = new javax.swing.JButton();
        rightsplitButtonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        leftsplitPanel = new javax.swing.JPanel();
        searchCombo = new javax.swing.JComboBox();
        searchBar = new javax.swing.JTextField();
        leftsplitInstruTablePanel = new javax.swing.JScrollPane();
        instruTable = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        advSearchButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        overlord.setAutoscrolls(true);
        overlord.setContinuousLayout(true);
        overlord.setName(""); // NOI18N

        rightsplitPanel.setLayout(new java.awt.BorderLayout());

        detailPanel.setLayout(new java.awt.GridBagLayout());

        statusLabel.setText("Status:");
        statusLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(statusLabel, gridBagConstraints);

        statusCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "In Storage", "At Shop", "On Loan", "Missing" }));
        statusCombo.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(statusCombo, gridBagConstraints);

        instrumentLabel.setText("Instrument:");
        instrumentLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(instrumentLabel, gridBagConstraints);

        instruBox.setEditable(false);
        instruBox.setAutoscrolls(false);
        instruBox.setMaximumSize(new java.awt.Dimension(1000, 20));
        instruBox.setMinimumSize(new java.awt.Dimension(1000, 20));
        instruBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instruBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(instruBox, gridBagConstraints);

        brandLabel.setText("Brand:");
        brandLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(brandLabel, gridBagConstraints);

        brandBox.setEditable(false);
        brandBox.setAutoscrolls(false);
        brandBox.setMinimumSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(brandBox, gridBagConstraints);

        serialLabel.setText("Serial Number:");
        serialLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(serialLabel, gridBagConstraints);

        serialBox.setEditable(false);
        serialBox.setAutoscrolls(false);
        serialBox.setMinimumSize(new java.awt.Dimension(200, 20));
        serialBox.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(serialBox, gridBagConstraints);

        rankLabel.setText("Rank:");
        rankLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(rankLabel, gridBagConstraints);

        rankBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rankBox.setText("3");
        rankBox.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(rankBox, gridBagConstraints);

        valueLabel.setText("Value: $");
        valueLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(valueLabel, gridBagConstraints);

        valueBox.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        valueBox.setText("0");
        valueBox.setAutoscrolls(false);
        valueBox.setMinimumSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 95;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(valueBox, gridBagConstraints);

        strapLabel.setText("Neck Strap:");
        strapLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(strapLabel, gridBagConstraints);

        strapCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Yes", "No", "n/a" }));
        strapCombo.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(strapCombo, gridBagConstraints);

        ligatureLabel.setText("Ligature:");
        ligatureLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(ligatureLabel, gridBagConstraints);

        ligCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Yes", "No", "n/a" }));
        ligCombo.setPreferredSize(null);
        ligCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ligComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(ligCombo, gridBagConstraints);

        mpieceLabel.setText("Mouthpiece:");
        mpieceLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(mpieceLabel, gridBagConstraints);

        mpieceCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Yes", "No", "n/a" }));
        mpieceCombo.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(mpieceCombo, gridBagConstraints);

        capLabel.setText("Mouthpiece Cap:");
        capLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(capLabel, gridBagConstraints);

        capCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Yes", "No", "n/a" }));
        capCombo.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(capCombo, gridBagConstraints);

        bowLabel.setText("Bow:");
        bowLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        detailPanel.add(bowLabel, gridBagConstraints);

        bowCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Yes", "No", "n/a" }));
        bowCombo.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        detailPanel.add(bowCombo, gridBagConstraints);

        noteLabel.setText("Notes:");
        noteLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        detailPanel.add(noteLabel, gridBagConstraints);

        detailNotePanel.setMinimumSize(new java.awt.Dimension(25, 25));

        notesTPane.setMinimumSize(new java.awt.Dimension(25, 25));
        notesTPane.setPreferredSize(null);
        detailNotePanel.setViewportView(notesTPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailPanel.add(detailNotePanel, gridBagConstraints);

        infoTabs.addTab("Details", detailPanel);

        historyPanel.setLayout(new java.awt.BorderLayout());

        historySplit.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Event"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        historyTable.setPreferredSize(null);
        historyTable.getTableHeader().setReorderingAllowed(false);
        historyTablePanel.setViewportView(historyTable);

        historySplit.setLeftComponent(historyTablePanel);

        checkoutPanel.setLayout(new java.awt.GridBagLayout());

        renterLabel.setText("Renter:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        checkoutPanel.add(renterLabel, gridBagConstraints);

        renterBox.setAutoscrolls(false);
        renterBox.setMinimumSize(new java.awt.Dimension(200, 20));
        renterBox.setPreferredSize(null);
        renterBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renterBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        checkoutPanel.add(renterBox, gridBagConstraints);

        schoolyearLabel.setText("School Year:");
        schoolyearLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        checkoutPanel.add(schoolyearLabel, gridBagConstraints);

        schoolyearBox.setAutoscrolls(false);
        schoolyearBox.setMinimumSize(new java.awt.Dimension(200, 20));
        schoolyearBox.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        checkoutPanel.add(schoolyearBox, gridBagConstraints);

        dateoutLabel.setText("Date Out:");
        dateoutLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        checkoutPanel.add(dateoutLabel, gridBagConstraints);

        dateoutBox.setAutoscrolls(false);
        dateoutBox.setMinimumSize(new java.awt.Dimension(200, 20));
        dateoutBox.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        checkoutPanel.add(dateoutBox, gridBagConstraints);

        feeLabel.setText("Fee Paid:");
        feeLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        checkoutPanel.add(feeLabel, gridBagConstraints);

        feeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Paid", "Unpaid", "Waived" }));
        feeCombo.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        checkoutPanel.add(feeCombo, gridBagConstraints);

        periodLabel.setText("For Use In:");
        periodLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        checkoutPanel.add(periodLabel, gridBagConstraints);

        periodCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7" }));
        periodCombo.setPreferredSize(null);
        periodCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                periodComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        checkoutPanel.add(periodCombo, gridBagConstraints);

        otherLabel.setText("Other:");
        otherLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        checkoutPanel.add(otherLabel, gridBagConstraints);

        otherBox.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 300;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        checkoutPanel.add(otherBox, gridBagConstraints);

        checkoutButtonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        formButton.setText("Generate Form");
        formButton.setPreferredSize(null);
        checkoutButtonPanel.add(formButton);

        outButton.setText("Check Out");
        outButton.setPreferredSize(null);
        checkoutButtonPanel.add(outButton);

        inButton.setText("Check In");
        inButton.setPreferredSize(null);
        checkoutButtonPanel.add(inButton);

        lostButton.setText("Lost");
        lostButton.setPreferredSize(null);
        checkoutButtonPanel.add(lostButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 300;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        checkoutPanel.add(checkoutButtonPanel, gridBagConstraints);

        historySplit.setRightComponent(checkoutPanel);

        historyPanel.add(historySplit, java.awt.BorderLayout.CENTER);

        infoTabs.addTab("History", historyPanel);

        rightsplitPanel.add(infoTabs, java.awt.BorderLayout.CENTER);

        saveButton.setText("SAVE CHANGES");
        saveButton.setPreferredSize(null);
        rightsplitButtonPanel.add(saveButton);

        cancelButton.setText("CANCEL CHANGES");
        cancelButton.setPreferredSize(null);
        rightsplitButtonPanel.add(cancelButton);

        deleteButton.setText("DELETE INSTRUMENT");
        deleteButton.setPreferredSize(null);
        rightsplitButtonPanel.add(deleteButton);

        rightsplitPanel.add(rightsplitButtonPanel, java.awt.BorderLayout.SOUTH);

        overlord.setRightComponent(rightsplitPanel);

        searchCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Name", "Brand", "Serial #", "Rank", "Value", "Status", "Ligature", "Mouthpiece", "Mouthpiece Cap", "Bow" }));
        searchCombo.setPreferredSize(null);
        searchCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchComboActionPerformed(evt);
            }
        });

        searchBar.setText("Search Bar");
        searchBar.setPreferredSize(null);
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });

        instruTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Flute", "Selmer", "45712"},
                {"Flute", "Yamaha", "4B212A"},
                {"Bb Clarinet", "Bundy", "7286"},
                {null, "", null}
            },
            new String [] {
                "Instrument", "Brand", "Serial #"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        instruTable.setPreferredSize(null);
        instruTable.getTableHeader().setReorderingAllowed(false);
        leftsplitInstruTablePanel.setViewportView(instruTable);

        searchButton.setText("Search");
        searchButton.setPreferredSize(null);

        addButton.setText("Add New Instrument");
        addButton.setPreferredSize(null);

        advSearchButton.setText("ADVANCED SEARCH");
        advSearchButton.setPreferredSize(null);

        org.jdesktop.layout.GroupLayout leftsplitPanelLayout = new org.jdesktop.layout.GroupLayout(leftsplitPanel);
        leftsplitPanel.setLayout(leftsplitPanelLayout);
        leftsplitPanelLayout.setHorizontalGroup(
            leftsplitPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, leftsplitPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(leftsplitPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, leftsplitInstruTablePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                    .add(leftsplitPanelLayout.createSequentialGroup()
                        .add(leftsplitPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(addButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(searchBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(leftsplitPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(leftsplitPanelLayout.createSequentialGroup()
                                .add(searchCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(searchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(advSearchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        leftsplitPanelLayout.setVerticalGroup(
            leftsplitPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(leftsplitPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(leftsplitPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(searchBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(searchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(searchCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(leftsplitPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(advSearchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(leftsplitInstruTablePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                .addContainerGap())
        );

        overlord.setLeftComponent(leftsplitPanel);

        add(overlord, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void searchComboActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchComboActionPerformed
    {//GEN-HEADEREND:event_searchComboActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_searchComboActionPerformed

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchBarActionPerformed
    {//GEN-HEADEREND:event_searchBarActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_searchBarActionPerformed

    private void instruBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_instruBoxActionPerformed
    {//GEN-HEADEREND:event_instruBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_instruBoxActionPerformed

    private void ligComboActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ligComboActionPerformed
    {//GEN-HEADEREND:event_ligComboActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_ligComboActionPerformed

    private void renterBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_renterBoxActionPerformed
    {//GEN-HEADEREND:event_renterBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_renterBoxActionPerformed

    private void periodComboActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_periodComboActionPerformed
    {//GEN-HEADEREND:event_periodComboActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_periodComboActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton advSearchButton;
    private javax.swing.JComboBox bowCombo;
    private javax.swing.JLabel bowLabel;
    private javax.swing.JTextField brandBox;
    private javax.swing.JLabel brandLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox capCombo;
    private javax.swing.JLabel capLabel;
    private javax.swing.JPanel checkoutButtonPanel;
    private javax.swing.JPanel checkoutPanel;
    private javax.swing.JTextField dateoutBox;
    private javax.swing.JLabel dateoutLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane detailNotePanel;
    private javax.swing.JPanel detailPanel;
    private javax.swing.JComboBox feeCombo;
    private javax.swing.JLabel feeLabel;
    private javax.swing.JButton formButton;
    private javax.swing.JPanel historyPanel;
    private javax.swing.JSplitPane historySplit;
    private javax.swing.JTable historyTable;
    private javax.swing.JScrollPane historyTablePanel;
    private javax.swing.JButton inButton;
    private javax.swing.JTabbedPane infoTabs;
    private javax.swing.JTextField instruBox;
    private javax.swing.JTable instruTable;
    private javax.swing.JLabel instrumentLabel;
    private javax.swing.JScrollPane leftsplitInstruTablePanel;
    private javax.swing.JPanel leftsplitPanel;
    private javax.swing.JComboBox ligCombo;
    private javax.swing.JLabel ligatureLabel;
    private javax.swing.JButton lostButton;
    private javax.swing.JComboBox mpieceCombo;
    private javax.swing.JLabel mpieceLabel;
    private javax.swing.JLabel noteLabel;
    private javax.swing.JTextPane notesTPane;
    private javax.swing.JTextField otherBox;
    private javax.swing.JLabel otherLabel;
    private javax.swing.JButton outButton;
    private javax.swing.JSplitPane overlord;
    private javax.swing.JComboBox periodCombo;
    private javax.swing.JLabel periodLabel;
    private javax.swing.JTextField rankBox;
    private javax.swing.JLabel rankLabel;
    private javax.swing.JTextField renterBox;
    private javax.swing.JLabel renterLabel;
    private javax.swing.JPanel rightsplitButtonPanel;
    private javax.swing.JPanel rightsplitPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField schoolyearBox;
    private javax.swing.JLabel schoolyearLabel;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox searchCombo;
    private javax.swing.JTextField serialBox;
    private javax.swing.JLabel serialLabel;
    private javax.swing.JComboBox statusCombo;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JComboBox strapCombo;
    private javax.swing.JLabel strapLabel;
    private javax.swing.JTextField valueBox;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
